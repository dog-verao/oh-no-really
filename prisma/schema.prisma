generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id            String         @id @default(cuid())
  name          String
  apiKey        String         @unique @default(cuid())
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  users         AccountUser[]
  announcements Announcement[]
  flows         Flow[]
  themes        Theme[]
}

model User {
  id            String         @id @default(cuid())
  email         String         @unique
  name          String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  accounts      AccountUser[]
  announcements Announcement[]
}

model AccountUser {
  id        String   @id @default(cuid())
  accountId String
  userId    String
  role      String
  createdAt DateTime @default(now())
  account   Account  @relation(fields: [accountId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Theme {
  id            String         @id @default(cuid())
  accountId     String
  name          String
  config        Json
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  announcements Announcement[]
  flows         Flow[]
  account       Account        @relation(fields: [accountId], references: [id])
}

model Announcement {
  id          String    @id @default(cuid())
  accountId   String
  themeId     String?
  createdBy   String?
  title       String
  message     String
  buttons     Json?
  draft       Boolean   @default(true)
  publishedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  account     Account   @relation(fields: [accountId], references: [id])
  user        User?     @relation(fields: [createdBy], references: [id])
  theme       Theme?    @relation(fields: [themeId], references: [id])
}

model Flow {
  id          String    @id @default(cuid())
  accountId   String
  themeId     String?
  name        String
  steps       Json
  draft       Boolean   @default(true)
  publishedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  account     Account   @relation(fields: [accountId], references: [id])
  theme       Theme?    @relation(fields: [themeId], references: [id])
}
